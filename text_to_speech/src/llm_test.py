from openai import OpenAI
import argparse
import logging

from robot_vocalizer.robot_vocalizer import RobotVocalizer

logger = logging.getLogger(__name__)

SYSTEM_PROMPT = """
Your job is to describe a PDDL plan generated by a planner in a concise but conversational voice. The plan includes actions such as:
(goto-poi <start> <end>) , which moves the robot from the start point to the end point. The start and end points might be an object like O123 or a places like P123. 

(inspect <object>), where the robot inspects an object, such as O123.


For example, if the plan is:
The robot name is Jerry.
(goto-poi P123 O32)
(inspect O32)
(goto-poi O32 P42)

The output should be:
Jerry is going to P123 to inspect O32. Then, Jerry is going to O32 to P42.

If the plan is:
The robot's name is Aaron.
(goto-poi P11 P12)
(goto-poi P12 O42)

The output should be:
Aaron is going to P11 to P12. Then, Aaron is going to P12 to O42.

Make sure to include the user provided robot name in the summary. If the user does not provide a robot name, use "the robot" in the summary.

"""

class PlanVocalizer:
    def __init__(self, openai_api_key: str, deepgram_api_key: str):
        self.client = OpenAI(api_key=openai_api_key)
        self.vocalizer = RobotVocalizer(deepgram_api_key, model="aura-2-apollo-en")

    def vocalize(self, robot_name: str, plan: str):
        response = self.client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[{"role": "system", "content": SYSTEM_PROMPT},
                      {"role": "user", "content": plan},
                      {"role": "user", "content": f"The robot's name is {robot_name}"}],
        )
        text = response.choices[0].message.content
        logger.debug(f"Model response: {text}")
        self.vocalizer.vocalize(text)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--openai-api-key", type=str, required=True)
    parser.add_argument("--deepgram-api-key", type=str, required=True)
    args = parser.parse_args()

    test_plan = """
    (goto-poi P1 O1)
    (inspect O1)
    (goto-poi P2 O2)
    (goto-poi P3 O3)
    (inspect O3)
    """

    plan_vocalizer = PlanVocalizer(args.openai_api_key, args.deepgram_api_key)
    plan_vocalizer.vocalize("Spot", test_plan)

if __name__ == "__main__":
    main()